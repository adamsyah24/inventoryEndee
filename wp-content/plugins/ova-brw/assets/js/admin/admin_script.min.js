!function(O){"use strict";var C={init:function(){this.ovabrw_datepicker(),this.choosehour(),this.change_pack_type(),this.brw_custom_checkout_taxonomy(),this.brw_create_manuall_order(),this.brw_taxi_location(),this.brw_update_order_status(),this.choosetime_full(),this.date_book(),this.brw_change_deposit(),this.brw_manage_vehicle(),this.brw_manage_feature_text(),this.brw_add_extra_feature(),this.brw_unavailable_time(),this.brw_local_price(),this.brw_setup_location(),this.brw_manage_resource(),this.brw_manage_service(),this.brw_manage_extra_time(),this.brw_manage_discount_distance(),this.brw_manage_special_time_distance(),this.brw_manage_cus_taxonomy(),this.brw_ui_select_cus_tax(),this.brw_manage_period_time(),this.brw_manage_show_hide_field_at_frontend(),this.brw_manage_globa_discount(),this.brw_manage_special_time(),this.brw_manage_vehicle_with_location(),this.brw_change_rental_type(),this.brw_show_hide_field_edit_product(),this.brw_product_templates(),this.brw_product_map(),this.brw_admin_settings(),this.brw_wc_global_settings()},ovabrw_datepicker:function(){var r,i,o,n,_,s,c,d,l,p,e;switch(O().datepicker&&(O(".ova_brw_datepicker_short").each(function(){O(this).datepicker({dateFormat:"dd-mm-yy",changeMonth:!0,changeYear:!1}).focus(function(){O(".ui-datepicker-year").hide()})}),O(".ova_brw_datepicker").each(function(){O(this).datepicker({dateFormat:"yy-dd-mm",changeMonth:!0,changeYear:!0})}),O(".ova_brw_datepicker_time").each(function(){e="12"==O(this).attr("data-time")?"hh:mm a":"HH:mm",O(this).timepicker({timeFormat:e,interval:15,dynamic:!1,dropdown:!0,scrollbar:!0})})),"undefined"!=typeof brw_lang_general_calendar&&O.datetimepicker.setLocale(brw_lang_general_calendar),"undefined"!=typeof brw_disable_week_day&&(r=brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)})),"undefined"!=typeof first_day&&(p=first_day),"undefined"!=typeof brw_time_to_book_general_calendar&&(i=brw_time_to_book_general_calendar),"undefined"!=typeof brw_time_to_book_general_calendar_endate&&(o=brw_time_to_book_general_calendar_endate),"undefined"!=typeof brw_format_time&&(n=brw_format_time),_="undefined"!=typeof brw_date_format?brw_date_format:_){case"d-m-Y":_="DD-MM-Y";break;case"m/d/Y":_="MM/DD/Y";break;case"Y/m/d":_="Y/MM/DD";break;case"Y-m-d":_="Y-MM-DD";break;default:_="DD-MM-Y"}s="undefined"!=typeof brw_data_step&&""!=brw_data_step?brw_data_step:30,"undefined"!=typeof brw_hour_default_start&&(c=brw_hour_default_start),"undefined"!=typeof brw_hour_default_end&&(d=brw_hour_default_end),l=new Date,O.datetimepicker.setDateFormatter({parseDate:function(e,a){a=moment(e,a);return!!a.isValid()&&a.toDate()},formatDate:function(e,a){return moment(e).format(a)}}),O(".ovabrw_datetimepicker").each(function(){var t=O(this),e=O(this).attr("date_rent_full"),a="";void 0!==e&&!1!==e&&(a=e);var o=O(this).attr("data-disable-week-day");r=o?o.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";e=!0,o=_+" "+n;a=O(this).hasClass("no_time_picker")?{dayOfWeekStart:p,minDate:l,disabledWeekDays:r,formatDate:_,format:o=_,formatTime:n,defaultTime:c,step:s,allowTimes:i,timepicker:e=!1,disabledDates:a,onSelectDate:function(e,a){t.blur()}}:{dayOfWeekStart:p,minDate:l,disabledWeekDays:r,formatDate:_,format:o,formatTime:n,defaultTime:c,step:s,allowTimes:i,timepicker:e,disabledDates:a,onSelectTime:function(e,a){t.blur()}},O(this).datetimepicker(a)}),O(".ovabrw_datetimepicker.ova-date-search").each(function(){var e=O(this).attr("data-disable-week-day");r=e?e.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";e={dayOfWeekStart:p,minDate:!1,disabledWeekDays:r,format:_+" "+n,formatTime:n,defaultTime:c,step:s,allowTimes:i,timepicker:!0};O(this).datetimepicker(e)}),O(".ovabrw_datetimepicker.ovabrw_end_date").on("click",function(){var t=O(this),e=!1;e=(e=(e=O(this).parent(".rental_item").parent(".sub-item").children(".rental_item").children(".ovabrw_start_date").val())||O(this).parent("td").parent(".tr_petime_discount").children("td").children(".ovabrw_start_date").val())||O(this).closest(".booking_filter").find(".ovabrw_start_date").val();var a=O(this).attr("data-disable-week-day");r=a?a.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";a={dayOfWeekStart:p,minDate:e||!1,disabledWeekDays:r,format:_+" "+n,formatDate:_,formatTime:n,defaultTime:d,step:s,allowTimes:o,timepicker:!0,onSelectTime:function(e,a){t.blur()}};O(this).hasClass("no_time_picker")&&(timepicker=!1,format=_,a={dayOfWeekStart:p,minDate:e||!1,disabledWeekDays:r,format:format,formatDate:_,formatTime:n,defaultTime:d,step:s,allowTimes:o,timepicker:timepicker,onSelectTime:function(e,a){t.blur()}}),O(this).datetimepicker(a)}),O('input[name="to_day"]').on("click",function(){var e=O(this).closest(".booking_filter").find('input[name="from_day"]').val(),a=O(this).attr("data-disable-week-day");r=a?a.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";e={dayOfWeekStart:p,minDate:e||!1,disabledWeekDays:r,format:_+" "+n,formatDate:_,formatTime:n,defaultTime:d,step:s,allowTimes:o,timepicker:!0};O(this).datetimepicker(e)}),O(".unavailable_time").each(function(){var e=O(this).attr("data-disable-week-day");r=e?e.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";e="HH:mm",e={dayOfWeekStart:p,minDate:l,disabledWeekDays:r,format:_+" "+e,formatDate:_+" "+e,formatTime:e,defaultTime:c,step:s,allowTimes:[],timepicker:!0};O(this).datetimepicker(e)}),O(".unavailable_time.end_date").on("click",function(){var e=(e=O(this).closest(".tr_rt_untime").find('input[name="ovabrw_untime_startdate[]"]').val())||O(this).closest("#meta-box-id-vehicle").find('input[name="ovabrw_id_vehicle_untime_from_day[startdate]"]').val(),a=O(this).attr("data-disable-week-day");r=a?a.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";a="HH:mm",a={dayOfWeekStart:p,minDate:e||!1,disabledWeekDays:r,format:_+" "+a,formatDate:_+" "+a,formatTime:a,defaultTime:d,step:s,allowTimes:[],timepicker:!0};O(this).datetimepicker(a)}),O(".ovabrw_timepicker").each(function(){var t=O(this),o=t.closest(".wrap-item").find('input[name="ovabrw_pickup_loc"]'),e={datepicker:!1,scrollInput:!1,format:n,formatTime:n,step:s,allowTimes:i,timepicker:!0,autoclose:!0,defaultTime:c,onSelectTime:function(e,a){0<o.length&&o.focus(),t.blur()}};O(this).datetimepicker(e)})},choosehour:function(){var e,a,t;"undefined"!=typeof brw_lang_general_calendar&&(e=brw_lang_general_calendar),O.datetimepicker.setLocale(e),"undefined"!=typeof brw_time_to_book_general_calendar&&(a=brw_time_to_book_general_calendar),""==(t="undefined"!=typeof brw_data_step?brw_data_step:30)&&(t=30);new Date;O.datetimepicker.setDateFormatter({parseDate:function(e,a){a=moment(e,a);return!!a.isValid()&&a.toDate()},formatDate:function(e,a){return moment(e).format(a)}}),O(".ovabrw_pehour_picker").each(function(){var e="",e={datepicker:!1,format:e="undefined"!=typeof brw_format_time?brw_format_time:"hh:mm A",formatTime:e,step:t,allowTimes:a};O(this).datetimepicker(e)})},change_pack_type:function(){O(".row_petime_record").each(function(){O(this).bind("change_package_type",function(){var e,a=O(this).find("select.ovabrw_package_type :selected").val();"inday"==a?(e=O("select#ovabrw_unfixed_time :selected").val(),O(this).find(".ovabrw_petime_days").hide(),O(this).find(".period_times").show(),"yes"!==e?(O(this).find(".period_times").show(),O(this).find(".period_times_unfixed").hide()):(O(this).find(".period_times_unfixed").show(),O(this).find(".period_times").hide())):"other"==a&&(O(this).find(".ovabrw_petime_days").show(),O(this).find(".period_times").hide(),O(this).find(".period_times_unfixed").hide())}),O(this).trigger("change_package_type"),O(this).find("select.ovabrw_package_type").change(function(){O(this).trigger("change_package_type")})})},brw_custom_checkout_taxonomy:function(){var S="Option Value",j="Option Text",q="Option Price",T="Add new option",M="Remove option";"undefined"!=typeof label_option_value&&(S=label_option_value),"undefined"!=typeof label_option_text&&(j=label_option_text),"undefined"!=typeof label_add_new_opt&&(T=label_add_new_opt),"undefined"!=typeof label_remove_opt&&(M=label_remove_opt);var t="Are you sure ?";"undefined"!=typeof label_are_you_sure&&(t=label_are_you_sure);var r="";r+="<tr>",r+='<td><input type="text" name="ova_options_key[]" placeholder="'+S+'" /></td>',r+='<td><input type="text" name="ova_options_text[]" placeholder="'+j+'" /></td>',r+='<td><input type="text" name="ova_options_price[]" placeholder="'+q+'" /></td>',r+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_addfield btn btn-blue" title="'+T+'">+</a></td>',r+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_row btn btn-red" title="'+M+'">x</a></td>',r+="</tr>",O(document).on("click",".ovabrw_addfield",function(e){var a=O(this).closest("table"),t=a.find("tbody tr").size(),o=(o=O(".ova-wrap-popup-ckf").attr("height"))?parseInt(o)+5:110;O(".ova-wrap-popup-ckf").attr("height",o),O(".ova-wrap-popup-ckf").css("height",o+"vh"),0<t?a.find("tbody tr:last").after(r):a.find("tbody").append(r)}),O(document).on("click",".ovabrw_remove_row",function(e){var a=O(this).closest("table");O(this).closest("tr").remove(),0==a.find("tbody tr").size()&&a.find("tbody").append(r)});var i="";i+="<tr>",i+='<td><input type="text" name="ova_values[]" placeholder="Value" /></td>',i+='<td><input type="text" name="ova_prices[]" placeholder="Price" /></td>',i+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_value btn btn-blue" title="Add">+</a></td>',i+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_value btn btn-red" title="Remove">x</a></td>',i+="</tr>",O(document).on("click",".ovabrw_add_value",function(e){var a=O(this).closest("table"),t=a.find("tbody tr").size(),o=(o=O(".ova-wrap-popup-ckf").attr("height"))?parseInt(o)+5:110;O(".ova-wrap-popup-ckf").attr("height",o),O(".ova-wrap-popup-ckf").css("height",o+"vh"),0<t?a.find("tbody tr:last").after(i):a.find("tbody").append(i)}),O(document).on("click",".ovabrw_remove_value",function(e){var a=O(this).closest("table");O(this).closest("tr").remove(),0==a.find("tbody tr").size()&&a.find("tbody").append(i)});var n="";n+="<tr>",n+='<td><input type="text" name="ova_checkbox_key[]" placeholder="'+S+'" /></td>',n+='<td><input type="text" name="ova_checkbox_text[]" placeholder="'+j+'" /></td>',n+='<td><input type="text" name="ova_checkbox_price[]" placeholder="'+q+'" /></td>',n+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_checkbox_option btn btn-blue" title="'+T+'">+</a></td>',n+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_checkbox_option btn btn-red" title="'+M+'">x</a></td>',n+="</tr>",O(document).on("click",".ovabrw_add_checkbox_option",function(e){var a=O(this).closest("table"),t=a.find("tbody tr").size(),o=(o=O(".ova-wrap-popup-ckf").attr("height"))?parseInt(o)+5:110;O(".ova-wrap-popup-ckf").attr("height",o),O(".ova-wrap-popup-ckf").css("height",o+"vh"),0<t?a.find("tbody tr:last").after(n):a.find("tbody").append(n)}),O(document).on("click",".ovabrw_remove_checkbox_option",function(e){var a=O(this).closest("table");O(this).closest("tr").remove(),0==a.find("tbody tr").size()&&a.find("tbody").append(n)}),O(".ovabrw_edit_field_form").on("click",function(e){var a=O(this).data("data_edit"),t=a.name,o=a.type||"text",r=a.max_file_size,i=a.label,n=a.placeholder,_=a.default,s=a.class,c=a.ova_options_key,d=a.ova_options_text,l=a.ova_options_price,p=a.ova_values,v=a.ova_prices,b=a.ova_checkbox_key,w=a.ova_checkbox_text,f=a.ova_checkbox_price,u=a.slug,h=a.singular_name,m=a.label_frontend,y=a.required,g=a.enabled,a=a.show_listing;"select"==o||"radio"==o||"checkbox"==o||"file"==o?O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"):O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","table-row"),"checkbox"==o?O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","table-row"):O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","none"),"file"==o?(O(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").show(),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","table-row"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","none")):(O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","table-row"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","none"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").hide());var k="";"select"===o?(O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options table.ova-sub-table tbody").empty(),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","table-row"),c.forEach(function(e,a){k+="<tr>",k+='<td><input type="text" name="ova_options_key[]" placeholder="'+S+'" value="'+e+'" /></td>',k+='<td><input type="text" name="ova_options_text[]" placeholder="'+j+'" value="'+d[a]+'" /></td>',l[a]?k+='<td><input type="text" name="ova_options_price[]" placeholder="'+q+'" value="'+l[a]+'" /></td>':k+='<td><input type="text" name="ova_options_price[]" placeholder="'+q+'" value="" /></td>',k+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_addfield btn btn-blue" title="'+T+'">+</a></td>',k+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_row btn btn-red" title="'+M+'">x</a></td>',k+="</tr>"}),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options table.ova-sub-table tbody").append(k)):O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","none");var x="";"radio"===o?(O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values table.ova-sub-table tbody").empty(),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values").css("display","table-row"),p.forEach(function(e,a){x+="<tr>",x+='<td><input type="text" name="ova_values[]" value="'+e+'" placeholder="Value" /></td>',v[a]?x+='<td><input type="text" name="ova_prices[]" value="'+v[a]+'" placeholder="Price" /></td>':x+='<td><input type="text" name="ova_prices[]" value="" placeholder="Price" /></td>',x+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_value btn btn-blue" title="Add">+</a></td>',x+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_value btn btn-red" title="Remove">x</a></td>',x+="</tr>"}),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values table.ova-sub-table tbody").append(x)):O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values").css("display","none");var D="";"checkbox"===o?(O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options table.ova-sub-table tbody").empty(),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","table-row"),b.forEach(function(e,a){D+="<tr>",D+='<td><input type="text" name="ova_checkbox_key[]" placeholder="'+S+'" value="'+e+'" /></td>',D+='<td><input type="text" name="ova_checkbox_text[]" placeholder="'+j+'" value="'+w[a]+'" /></td>',f[a]?D+='<td><input type="text" name="ova_checkbox_price[]" placeholder="'+q+'" value="'+f[a]+'" /></td>':D+='<td><input type="text" name="ova_checkbox_price[]" placeholder="'+q+'" value="" /></td>',D+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_checkbox_option btn btn-blue" title="'+T+'">+</a></td>',D+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_checkbox_option btn btn-red" title="'+M+'">x</a></td>',D+="</tr>"}),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options table.ova-sub-table tbody").append(D)):O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","none"),O('#ova_popup_field_form input[name="ova_action"]').val("edit"),O('#ova_popup_field_form input[name="ova_old_name"]').val(t),O('#ova_popup_field_form input[name="ova_old_slug"]').val(u),O("#ova_type").val(o),O("#ova_popup_field_form .ova-row-name input").val(t),O("#ova_popup_field_form .ova-row-file-size input").val(r),O("#ova_popup_field_form .ova-row-label input").val(i),O("#ova_popup_field_form .ova-row-placeholder input").val(n),O("#ova_popup_field_form .ova-row-default input").val(_),O("#ova_popup_field_form .ova-row-class input").val(s),O("#ova_popup_field_form .ova-row-slug input").val(u).attr("readonly",!0),O("#ova_popup_field_form .ova-row-sigular-name input").val(h),O("#ova_popup_field_form .ova-row-label-frontend input").val(m),"on"==y?O("#ova_popup_field_form .row-required #ova_required").prop("checked",!0):O("#ova_popup_field_form .row-required #ova_required").prop("checked",!1),"on"==g?O("#ova_popup_field_form .row-required #ova_enable").prop("checked",!0):O("#ova_popup_field_form .row-required #ova_enable").prop("checked",!1),"on"==a?O("#ova_popup_field_form .row-show-listing #show_listing").prop("checked",!0):O("#ova_popup_field_form .row-show-listing #show_listing").prop("checked",!1),O(".ova-wrap-popup-ckf").css("display","block")}),O("#ovabrw_openform").on("click",function(e){O('#ova_popup_field_form input[name="ova_action"]').val("new"),O('#ova_popup_field_form input[name="ova_old_name"]').val(""),O('#ova_popup_field_form input[name="ova_old_slug"]').val(""),O(".ova-wrap-popup-ckf").css("display","block"),O("#ova_type").val("text"),O('.ova-wrap-popup-ckf input[name="name"]').val(""),O('.ova-wrap-popup-ckf input[name="label"]').val(""),O('.ova-wrap-popup-ckf input[name="placeholder"]').val(""),O('.ova-wrap-popup-ckf input[name="default"]').val(""),O(".ova-wrap-popup-ckf .row-options").css("display","none"),O(".ova-wrap-popup-ckf .row-values").css("display","none"),O(".ova-wrap-popup-ckf .row-checkbox-options").css("display","none"),O(".ova-wrap-popup-ckf .ova-row-placeholder").css("display","table-row"),O('.ova-wrap-popup-ckf input[name="slug"]').val("").removeAttr("readonly"),O('.ova-wrap-popup-ckf input[name="singular_name"]').val(""),O('.ova-wrap-popup-ckf input[name="label_frontend"]').val(""),O(".ova-wrap-popup-ckf #ova_required").attr("checked","checked"),O(".ova-wrap-popup-ckf #ova_enable").attr("checked","checked"),O(".ova-wrap-popup-ckf #show_listing").attr("checked","checked"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","none"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").hide()}),O("#ovabrw_select_all_field").on("click",function(e){var a=O(this).prop("checked");O(".ova-list-checkout-field table tbody tr td.ova-checkbox input").prop("checked",a)}),O("#ovabrw_close_popup").on("click",function(e){O(".ova-wrap-popup-ckf").css("display","none")}),O('input[name="remove"]').on("click",function(e){var a;([a=""]=[t],confirm(a))||e.preventDefault()}),O("#ova_type").on("change",function(){O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","none"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values").css("display","none"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","none"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","table-row"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-price").css("display","none"),"select"==O(this).val()&&(O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","table-row"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values").css("display","none")),"radio"==O(this).val()&&(O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values").css("display","table-row"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","none"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none")),"checkbox"==O(this).val()&&(O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","table-row")),"file"==O(this).val()?(O(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").show(),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","table-row"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","none")):(O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","none"),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").hide(),O(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","table-row"))})},brw_create_manuall_order:function(){C.brw_create_order_change_product(),C.brw_create_order_pickup_date_change(),C.brw_create_order_pickup_time_change(),C.brw_create_order_end_date_change(),C.brw_create_order_pickup_loc_change(),C.brw_create_order_remove_order_item(),C.brw_create_order_change_fields_transportation(),C.brw_create_order_change_quantity(),C.brw_create_order_change_fields_period_time(),C.brw_create_order_change_deposit(),C.brw_create_order_country(),C.brw_ship_to_different_address(),C.brw_create_order_change_resources(),C.brw_create_order_change_services(),C.brw_create_order_ckf(),C.brw_create_order_submit(),O(".insert_wrap_item").on("click",function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".wrap").find(".wrap_item").append(e),C.brw_create_order_change_product(),C.brw_create_order_pickup_date_change(),C.brw_create_order_pickup_time_change(),C.brw_create_order_end_date_change(),C.brw_create_order_pickup_loc_change(),C.brw_create_order_remove_order_item(),C.brw_create_order_change_fields_transportation(),C.brw_create_order_change_quantity(),C.brw_create_order_change_fields_period_time(),C.brw_create_order_change_deposit(),C.brw_create_order_change_resources(),C.brw_create_order_change_services(),C.brw_create_order_ckf(),C.brw_create_order_submit()})},brw_taxi_location:function(w=null){function o(e){let a="",t=0;for(var o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=o.length;t<e;)a+=o.charAt(Math.floor(Math.random()*r)),t+=1;return a}function r(){w.find(".btn-remove-waypoint").off().on("click",function(){O(this).closest(".ovabrw-location-field").remove(),n()})}function i(){"undefined"!=typeof google&&w.find('input[name="ovabrw_waypoint_address['+f+'][]"]').each(function(){var t=O(this),e=t.attr("id"),e=document.getElementById(e),o=new google.maps.places.Autocomplete(e,c);o.addListener("place_changed",function(){var e=o.getPlace(),a=e.formatted_address,a={lat:e.geometry.location.lat(),lng:e.geometry.location.lng(),formatted_address:a};t.closest(".ovabrw-location-field").find('input[name="ovabrw_waypoint_data[]"]').val(JSON.stringify(a)),n()})})}function n(){if("undefined"!=typeof google){var _=w.find(".ovabrw-directions"),e=t.data("lat"),a=t.data("lng"),s=t.data("zoom"),c=w.find('input[name="ovabrw_origin"]').val(),d=w.find('input[name="ovabrw_destination"]').val(),l=w.find('select[name="ovabrw_extra_time[]"]').val(),p=[],l=l||0;if(w.find('input[name="ovabrw_waypoint_data[]"]').each(function(){p.push({location:O(this).val(),stopover:!0})}),c&&d){_.css("display","block");let t=0,o=0,r,i,n;const v=new google.maps.DirectionsService,b=new google.maps.DirectionsRenderer;a=new google.maps.Map(document.getElementById("ovabrw_map_"+f),{zoom:s,center:{lat:e,lng:a}});b.setMap(a),v.route({origin:c,destination:d,waypoints:p,optimizeWaypoints:!0,travelMode:google.maps.TravelMode.DRIVING}).then(e=>{b.setDirections(e);var a=e.routes[0];for(let e=0;e<a.legs.length;e++)t+=a.legs[e].distance.value,o+=a.legs[e].duration.value;t=t||0,o=o||0,w.find('input[name="ovabrw-distance[]"]').val(t),w.find('input[name="ovabrw-duration-map[]"]').val(o),r=parseFloat(3600*l)+parseInt(o),w.find('input[name="ovabrw-duration[]"]').val(r),i=parseInt(r/3600),n=Math.round(r%3600/60),_.find(".distance-value").html("").append((t/1e3).toFixed(2)),_.find(".hour").html("").append(i),_.find(".minute").html("").append(n),C.brw_create_order_view_total_cost(w)}).catch(e=>window.alert("Directions request failed!"))}else C.brw_create_order_view_total_cost(w)}}var f,t,_,s,c,e,a,d,l,p,v;w&&(f=w.find('select[name="ovabrw_name_product[]"]').val(),t=w.find('input[name="ovabrw-data-location"]'),_=t.data("waypoint-text"),s=[],c={fields:["formatted_address","geometry"]},e=t.data("types"),a=t.data("bounds"),d=t.data("bounds-lat"),l=t.data("bounds-lng"),v=t.data("bounds-radius"),p=t.data("restrictions"),e&&(c.types=e),"on"==a&&d&&l&&v&&(v=new google.maps.Circle({center:new google.maps.LatLng(d,l),radius:v}),c.bounds=v.getBounds(),c.strictBounds=!0),p&&O.isArray(p)&&(c.componentRestrictions={country:p}),function t(){w.find(".btn-add-waypoint").off().on("click",function(){for(var e=o(16);-1!==O.inArray(e,s);)e=o(16);var a='<div class="rental_item ovabrw-location-field ovabrw-waypoint">';a+="<label>"+_+"</label>",a+='<span class="location-field">',a+='<input type="text" id="ovabrw_waypoint_loc_'+e+'" name="ovabrw_waypoint_address['+f+'][]" autocomplete="off">',a+='<input type="hidden" name="ovabrw_waypoint_data[]" value="">',a+='<i aria-hidden="true" class="flaticon-substract btn-remove-waypoint"></i>',a+='<i aria-hidden="true" class="flaticon-add btn-add-waypoint"></i>',a+="</span>",a+="</div",O(this).closest(".ovabrw-location-field").after(a),t(),r(),i()})}(),r(),function(){if("undefined"!=typeof google){var e=document.getElementById("ovabrw_pickup_location_"+f),a=document.getElementById("ovabrw_dropoff_location_"+f);const t=new google.maps.places.Autocomplete(e,c);t.addListener("place_changed",function(){var e=t.getPlace(),a=e.formatted_address,a={lat:e.geometry.location.lat(),lng:e.geometry.location.lng(),formatted_address:a};w.find('input[name="ovabrw_origin"]').val(JSON.stringify(a)),w.find('input[name="ovabrw_dropoff_location[]"]').focus(),n()});const o=new google.maps.places.Autocomplete(a,c);o.addListener("place_changed",function(){var e=o.getPlace(),a=e.formatted_address,a={lat:e.geometry.location.lat(),lng:e.geometry.location.lng(),formatted_address:a};w.find('input[name="ovabrw_destination"]').val(JSON.stringify(a)),n()})}}(),w.find('select[name="ovabrw_extra_time[]"]').on("change",function(){var e=(e=O(this).val())||0,a=(a=w.find('input[name="ovabrw-duration-map[]"]').val())||0,t=parseFloat(3600*e)+parseInt(a),e=parseInt(t/3600),a=Math.round(t%3600/60);w.find('input[name="ovabrw-duration[]"]').val(t),w.find(".ovabrw-directions .hour").html("").append(e),w.find(".ovabrw-directions .minute").html("").append(a),C.brw_create_order_view_total_cost(O(this))}))},brw_create_order_change_product:function(){O('.ovabrw-order select[name="ovabrw_name_product[]"]').on("change",function(){var j=O(this).val(),q=O(this).parent(".rental_item").parent(".sub-item").parent(".item").addClass("test_item"),T=O(this).data("date_format"),M=O(this).data("short_date_format");q.children(".sub-item").children(".rental_item").find("input").val(""),q.children(".sub-item").children(".rental_item.show_number_vehicle").find("input").val(1),j?q.children(".sub-item.ovabrw-meta").css("display","block"):q.children(".sub-item.ovabrw-meta").css("display","none"),q.children(".sub-item").children(".ovabrw-total-time").css("display","none"),q.children(".sub-item").children(".ovabrw-total-cost").css("display","none"),q.children(".sub-item").children(".ovabrw-amount-remaining").css("display","none"),q.children(".sub-item").children(".ovabrw-error").css("display","none"),q.children(".sub-item").find(".ovabrw_number_available_vehicle").css("display","none"),q.children(".sub-item").find(".ovabrw_number_available_vehicle").empty(),q.children(".sub-item").find(".ovabrw_number_vehicle").attr("max",1),O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_load_data_product_create_order",name_product:j},success:function(e){var t,a=O.parseJSON(e),o=a.rental_type,r=a.petime_id,i=a.petime_label,n=a.ovabrw_amount_insurance,_=a.product_price,s=a.ovabrw_id_vehicles,c=a.ovabrw_define_1_day,d=a.show_number_vehicle,l=a.show_pickup_loc,p=a.show_pickoff_loc,v=a.html_pickup_location,b=a.html_dropoff_location,w=a.html_custom_ckf,f=a.html_resources,u=a.html_services,h=a.show_pickup_date,m=a.show_pickoff_date,y=a.unfixed_time,g=a.disable_week_day,e=[];a.order_date&&(e=JSON.parse(a.order_date),t=[],e.forEach(function(e,a){e.hasOwnProperty("rendering")&&t.push(e.start_v2)})),t&&q.find(".ovabrw_datetimepicker").attr("date_rent_full",t),q.find("#ovabrw-price-detail").val(_),q.find("select[name='ovabrw_rental_type[]']").children("option[value='"+o+"']").prop("selected",!0),q.find('select[name="ovabrw_define_1_day[]"]').children("option[value='"+c+"']").prop("selected",!0);var _=!1,k="",x="";if(x+='<select id="ovabrw-package" class="select_ovabrw_package" name="ovabrw_package[]" required>',x+='<option value="">------</option>',"period_time"===o&&r)for(var D in q.children(".sub-item").children(".ovabrw-dropoff").css("display","none"),q.children(".sub-item").children(".ovabrw-dropoff").find('input[name="ovabrw_pickoff_date[]"]').prop("required",!1),_=!0,r)r.hasOwnProperty(D)&&(x+='<option value="'+r[D]+'">'+i[D]+"</option>");else q.children(".sub-item").children(".ovabrw-dropoff").css("display","block"),q.children(".sub-item").children(".ovabrw-dropoff").find('input[name="ovabrw_pickoff_date[]"]').prop("required",!0);if(x+="</select>",k+='<select id="ovabrw-id-vehicle" class="select_ovabrw_id_vehicle" name="ovabrw_id_vehicle[]">',s)for(var S in s)s.hasOwnProperty(S)&&(k+='<option value="'+s[S]+'">'+s[S]+"</option>");k+="</select>",q.children(".sub-item").children(".ovabrw-package").children(".ovabrw-package-span").empty(),q.children(".sub-item").children(".ovabrw-package").css("display","block"),q.children(".sub-item").children(".rental_item").children(".ovabrw_amoun_insurance").val(n),q.children(".sub-item").children(".ovabrw-id-vehicle").children(".ovabrw-id-vehicle-span").html(k),s?q.children(".sub-item").children(".rental_item.ovabrw-id-vehicle").css("display","block"):q.children(".sub-item").children(".rental_item.ovabrw-id-vehicle").css("display","none"),_?(q.children(".sub-item").children(".ovabrw-package").children("label").text("Package"),q.children(".sub-item").children(".ovabrw-package").children(".ovabrw-package-span").html(x)):q.children(".sub-item").children(".ovabrw-package").css("display","none"),"no"==d||s?q.children(".sub-item").children(".rental_item.show_number_vehicle").css("display","none"):q.children(".sub-item").children(".rental_item.show_number_vehicle").css("display","block"),"no"==l?q.children(".sub-item").children(".rental_item.show_pickup_loc").css("display","none"):q.children(".sub-item").children(".rental_item.show_pickup_loc").css("display","block"),"no"==p?q.children(".sub-item").children(".rental_item.show_pickoff_loc").css("display","none"):q.children(".sub-item").children(".rental_item.show_pickoff_loc").css("display","block"),q.children(".sub-item").children(".rental_item.show_pickup_loc").find("select.ovabrw_pickup_loc").empty(),q.children(".sub-item").children(".rental_item.show_pickoff_loc").find("select.ovabrw_pickoff_loc").empty(),q.children(".sub-item").children(".rental_item.show_pickup_loc").find("select.ovabrw_pickup_loc").html(v),q.children(".sub-item").children(".rental_item.show_pickoff_loc").find("select.ovabrw_pickoff_loc").html(b),q.children(".sub-item").children(".rental_item.ovabrw-custom_ckf").empty(),q.children(".sub-item").children(".rental_item.ovabrw-custom_ckf").html(w),q.children(".sub-item").children(".rental_item.ovabrw-resources").find("span.ovabrw-resources-span").empty(),f?(q.children(".sub-item").children(".rental_item.ovabrw-resources").find("span.ovabrw-resources-span").html(f),q.children(".sub-item").children(".rental_item.ovabrw-resources").css("display","flex")):(q.children(".sub-item").children(".rental_item.ovabrw-resources").find("span.ovabrw-resources-span").empty(),q.children(".sub-item").children(".rental_item.ovabrw-resources").css("display","none")),q.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").empty(),u?(q.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").html(u),q.children(".sub-item").children(".rental_item.ovabrw-services").css("display","flex")):(q.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").empty(),q.children(".sub-item").children(".rental_item.ovabrw-services").css("display","none")),"no"==h&&q.find('input[name="ovabrw_pickup_date[]"]').css("display","none"),"no"==m&&(q.find(".ovabrw-dropoff").find('input[name="ovabrw_pickoff_date[]"]').prop("required",!1),q.find(".ovabrw-dropoff").hide()),"transportation"!=q.find('select[name="ovabrw_rental_type[]"]').val()||a.show_pickoff_date_location?q.find('input[name="ovabrw_pickoff_date[]"]').prop("readonly",!1):q.find('input[name="ovabrw_pickoff_date[]"]').prop("readonly",!0),g?(q.find('input[name="ovabrw_pickup_date[]"]').attr("data-disable-week-day",g),q.find('input[name="ovabrw_pickoff_date[]"]').attr("data-disable-week-day",g)):(q.find('input[name="ovabrw_pickup_date[]"]').attr("data-disable-week-day",""),q.find('input[name="ovabrw_pickoff_date[]"]').attr("data-disable-week-day","")),"taxi"==o?(q.find(".ovabrw-location-field").show(),q.find(".ovabrw-directions").show(),q.find(".ovabrw-pickup .ovabrw_start_date").addClass("no_time_picker"),q.find(".ovabrw-pickup .ovabrw_start_date").attr("placeholder",M),q.find(".ovabrw-directions .ovabrw_map").attr("id","ovabrw_map_"+j),q.find(".ovabrw-location-field .ovabrw_pickup_location").attr("id","ovabrw_pickup_location_"+j),q.find(".ovabrw-location-field .ovabrw_dropoff_location").attr("id","ovabrw_dropoff_location_"+j),q.find(".ovabrw-pickup .ovabrw_start_date").prop("required",!0),q.find(".ovabrw-location-field .ovabrw_timepicker").prop("required",!0),q.find(".ovabrw-location-field .ovabrw_pickup_location").prop("required",!0),q.find(".ovabrw-location-field .ovabrw_dropoff_location").prop("required",!0),(g=a.data_location)&&(a=q.find('input[name="ovabrw-data-location"]'),g=JSON.parse(g),a.attr("data-types",g.types),a.attr("data-lat",g.lat),a.attr("data-lng",g.lng),a.attr("data-zoom",g.zoom),a.attr("data-bounds",g.bounds),a.attr("data-bounds-lat",g.bounds_lat),a.attr("data-bounds-lng",g.bounds_lng),a.attr("data-bounds-radius",g.bounds_radius),a.attr("data-restrictions",g.restrictions),g.extra_time?(q.find(".ovabrw-extra-time").show(),q.find('select[name="ovabrw_extra_time[]"]').html("").append(g.extra_time)):(q.find(".ovabrw-extra-time").hide(),q.find('select[name="ovabrw_extra_time[]"]').html(""))),C.brw_taxi_location(q)):(q.find(".ovabrw-location-field").hide(),q.find(".ovabrw-directions").hide(),q.find(".ovabrw-extra-time").hide(),q.find('select[name="ovabrw_extra_time[]"]').html(""),q.find(".ovabrw-pickup .ovabrw_start_date").removeClass("no_time_picker"),q.find(".ovabrw-pickup .ovabrw_start_date").attr("placeholder",T),q.find(".ovabrw-pickup .ovabrw_start_date").prop("required",!1),q.find(".ovabrw-location-field .ovabrw_timepicker").prop("required",!1),q.find(".ovabrw-location-field .ovabrw_pickup_location").prop("required",!1),q.find(".ovabrw-location-field .ovabrw_dropoff_location").prop("required",!1)),"period_time"==o&&"yes"!=y?(q.children(".sub-item").children(".rental_item").find("input.ovabrw_datetimepicker").addClass("no_time_picker startdate_perido_time"),q.children(".sub-item").children(".rental_item").find("input.ovabrw_datetimepicker").attr("placeholder",M)):"taxi"==o||"day"==o&&"hotel"==c?(q.children(".sub-item").children(".rental_item").find("input.ovabrw_datetimepicker").addClass("no_time_picker"),q.children(".sub-item").children(".rental_item").find("input.ovabrw_datetimepicker").attr("placeholder",M)):(q.children(".sub-item").children(".rental_item").find("input.ovabrw_datetimepicker").removeClass("no_time_picker startdate_perido_time"),q.children(".sub-item").children(".rental_item").find("input.ovabrw_datetimepicker").attr("placeholder",T)),C.ovabrw_datepicker(),C.brw_create_order_change_fields_period_time(),C.brw_create_order_ckf(),C.brw_create_order_change_fields_transportation(),C.brw_create_order_view_total_cost(O(this))}})})},brw_create_order_view_total_cost:function(e){var r=O(e).closest(".item"),i=r.find(".ovabrw_name_product").val(),a=r.find(".ovabrw_start_date").val(),t=r.find(".ovabrw_end_date").val(),o=r.find(".ovabrw_number_vehicle").val(),n=r.find(".ovabrw_pickup_loc").val(),_=r.find(".ovabrw_pickoff_loc").val(),s=r.find('select[name="ovabrw_rental_type[]"]').val(),c=r.find('input[name="ovabrw_pickup_time[]"]').val(),d=r.find('input[name="ovabrw_pickup_location[]"]').val(),l=r.find('input[name="ovabrw_dropoff_location[]"]').val(),p=r.find('input[name="ovabrw_extra_time[]"]').val(),v=r.find('input[name="ovabrw-duration-map[]"]').val(),b=r.find('input[name="ovabrw-duration[]"]').val(),w=r.find('input[name="ovabrw-distance[]"]').val(),f="";"period_time"==s&&(f=r.find("#ovabrw-package").val());var u=[];r.find(".resources_order input[type=checkbox]:checked").each(function(){u[O(this).data("resource_key")]=O(this).val()});var h=O.extend({},u),m=[];r.find(".services_order select[name='ovabrw_service["+i+"][]']").each(function(){O(this).val()&&m.push(O(this).val())});e=O.extend({},m);r.children(".sub-item").children(".ovabrw-total-time").css("display","none"),r.children(".sub-item").children(".ovabrw-total-cost").css("display","none"),r.children(".sub-item").children(".ovabrw-amount-remaining").css("display","none"),r.children(".sub-item").children(".ovabrw-error").css("display","none");var y={},s=r.find('input[name="data_custom_ckf"]').data("ckf");s&&O.each(s,function(e,a){var t;"radio"==a.type&&(y[e]=r.find('input[name="'+e+"["+i+']"]:checked').val()),"checkbox"==a.type&&(t=[],r.find('input[name="'+e+"["+i+'][]"]:checked').each(function(){t.push(O(this).val())}),y[e]=t),"select"==a.type&&(y[e]=r.find('select[name="'+e+"["+i+']"]').val())}),O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_total_price_and_quantity",id_product:i,start_date:a,end_date:t,id_package:f,number_vehicle:o,pickup_loc:n,dropoff_loc:_,pickup_time:c,pickup_location:d,dropoff_location:l,extra_time:p,duration_map:v,duration:b,distance:w,resources:JSON.stringify(h),services:JSON.stringify(e),custom_ckf:JSON.stringify(y)},success:function(e){var a,t=O.parseJSON(e),o=t.error;r.find(".services_order select[name='ovabrw_service["+i+"][]']").each(function(){O(this).hasClass("required")&&(O(this).val()?O(this).closest(".item").children(".error_item").css("display","none"):O(this).closest(".item").children(".error_item").css("display","block"))}),o?(r.children(".sub-item").children(".ovabrw-error").css("display","inline-block"),r.find(".ovabrw_number_available_vehicle").html(""),r.children(".sub-item").children(".ovabrw-error").children(".ovabrw-error-span").text(t.message)):(a=t.quantity,e=t.line_total,o=t.product_price,t=t.number_vehicle_available,r.find(".ovabrw_number_available_vehicle").html("Max:"+t),"transportation"==r.find('select[name="ovabrw_rental_type[]"]').val()&&r.find(".ovabrw_number_vehicle").attr("max",t),r.children(".sub-item").children(".ovabrw-total-time").css("display","block"),r.children(".sub-item").children(".ovabrw-total-cost").css("display","block"),r.find("#ovabrw-price-detail").val(o),r.find("#ovabrw-total-time").val(a),r.find("#ovabrw-total-product").val(e),o||r.find("#ovabrw-price-detail").val(e))}})},brw_create_order_pickup_date_change:function(){O('.ovabrw-order input[name="ovabrw_pickup_date[]"]').on("change",function(){"transportation"!=O(this).closest(".item").find('select[name="ovabrw_rental_type[]"]').val()&&C.brw_create_order_view_total_cost(O(this))})},brw_create_order_pickup_time_change:function(){O('.ovabrw-order input[name="ovabrw_pickup_time[]"]').on("change",function(){C.brw_create_order_view_total_cost(O(this))})},brw_create_order_end_date_change:function(){O(".ovabrw-order .ovabrw_end_date").on("change",function(){var n=O(this),e=n.val(),a=n.closest(".ovabrw-meta").find(".ovabrw_start_date").val(),t=n.closest(".item").find(".ovabrw_name_product").val(),o=n.closest(".ovabrw-meta").find(".ovabrw_pickup_loc").val(),r=n.closest(".ovabrw-meta").find(".ovabrw_pickoff_loc").val(),i=n.closest(".ovabrw-meta").find(".select_ovabrw_package").val();n.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").css("display","inline-block"),O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_id_vehicle_rest",id_product:t,pickup_date:a,dropp_off:e,pickup_loc:o,dropoff_loc:r,package_id:i},success:function(e){var a=O.parseJSON(e),t=a.error,e=a.number_vehicle_available;if(t)n.closest(".ovabrw-meta").find(".ovabrw-error").css("display","inline-block"),n.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text(a.message),n.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").text(" Available vehicles: 0"),n.closest(".ovabrw-meta").find(".ovabrw_number_vehicle").attr("max",1);else{var o=a.vehicle_availables,r="";if(r+='<select id="ovabrw-id-vehicle" class="select_ovabrw_id_vehicle" name="ovabrw_id_vehicle[]">',o)for(var i in o)o.hasOwnProperty(i)&&(r+='<option value="'+o[i]+'">'+o[i]+"</option>");r+="</select>",n.closest(".sub-item").find(".ovabrw-id-vehicle-span").empty(),n.closest(".sub-item").find(".ovabrw-id-vehicle-span").html(r),n.closest(".ovabrw-meta").find(".ovabrw-error").css("display","none"),n.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text(""),e?(n.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").text(" Available vehicles: "+e),n.closest(".ovabrw-meta").find(".ovabrw_number_vehicle").attr("max",e)):(n.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").text(" Available vehicles: 0"),n.closest(".ovabrw-meta").find(".ovabrw_number_vehicle").attr("max",1))}}}),C.brw_create_order_view_total_cost(O(this))})},brw_create_order_pickup_loc_change:function(){O(".ovabrw-order .ovabrw_pickup_loc").on("change",function(){var t=O(this),o=t.val(),e=t.closest(".item").find(".ovabrw_name_product").val();O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_rental_type_product",id_product:e},success:function(e){var a;"transportation"==O.parseJSON(e).rental_type&&(O(t).closest(".ovabrw-meta").find("select.ovabrw_pickoff_loc").empty(),e=O(t).find('option[value="'+o+'"]').data("item_loc"),a='<option value="">-----</option>',a=e?(e.forEach(function(e){e&&(a+='<option value="'+e+'" >'+e+"</option>")}),a||'<option value="">Select Location</option>'):'<option value="">Select Location</option>',O(t).closest(".ovabrw-meta").find("select.ovabrw_pickoff_loc").append(a))}}),C.brw_create_order_view_total_cost(O(this))})},brw_create_order_remove_order_item:function(){O(".ovabrw-order").on("click",".delete_order",function(e){e.preventDefault(),O(this).closest(".ovabrw-order").remove()})},brw_create_order_transportation:function(a){var t=O(a).closest(".ovabrw-meta"),e=t.find('input[name="ovabrw_pickup_date[]"]').val(),o=t.closest(".item").find(".ovabrw_name_product").val(),r=t.find(".ovabrw_pickup_loc").val(),i=t.find(".ovabrw_pickoff_loc").val();t.find(".ovabrw_number_available_vehicle").css("display","inline-block"),e&&r&&i&&O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_dropoff_date_transportation",id_product:o,pickup_date:e,pickup_loc:r,dropoff_loc:i},success:function(e){e=O.parseJSON(e);e.error?(t.find(".ovabrw-error").css("display","inline-block"),t.find(".ovabrw-error").children(".ovabrw-error-span").text(e.message)):(t.closest(".item").find('input[name="ovabrw_pickoff_date[]"]').val(e.dropoff),t.closest(".item").find(".ovabrw-dropoff").css("display","block"),C.brw_create_order_view_total_cost(O(a)))}})},brw_create_order_change_fields_transportation:function(){"transportation"==O('.ovabrw-order select[name="ovabrw_rental_type[]"]').val()&&(O('.ovabrw-order select[name="ovabrw_pickup_loc[]"]').on("change",function(){C.brw_create_order_transportation(O(this))}),O('.ovabrw-order select[name="ovabrw_pickoff_loc[]"]').on("change",function(){C.brw_create_order_transportation(O(this))}),O('.ovabrw-order input[name="ovabrw_pickup_date[]"]').on("change",function(){C.brw_create_order_transportation(O(this))}))},brw_create_order_change_quantity:function(){O('.ovabrw-order input[name="ovabrw_number_vehicle[]"]').on("change",function(){C.brw_create_order_view_total_cost(O(this))})},brw_create_order_change_fields_period_time:function(){O('.ovabrw-order input[name="ovabrw_pickup_date[]"]').on("change",function(){var a=O(this),e=a.val(),t=a.closest(".item").find(".ovabrw_name_product").val();a.closest(".ovabrw-meta").find(".select_ovabrw_package").attr("disabled","disabled"),O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_package_by_time",startdate:e,post_id:t},success:function(e){a.closest(".ovabrw-meta").find(".select_ovabrw_package").empty();var t="",e=O.parseJSON(e);e&&O.each(e,function(e,a){t+='<option value="'+e+'">'+a+"</option>"}),t&&a.closest(".ovabrw-meta").find(".select_ovabrw_package").append(t),a.closest(".ovabrw-meta").find(".select_ovabrw_package").attr("disabled",!1)}}),C.brw_create_order_view_total_cost(O(this))}),O('.ovabrw-order select[name="ovabrw_package[]"]').on("change",function(){var n=O(this),e=n.closest(".ovabrw-meta").find(".ovabrw_start_date").val(),a=n.closest(".ovabrw-meta").find(".ovabrw_end_date").val(),t=n.closest(".item").find(".ovabrw_name_product").val(),o=n.closest(".ovabrw-meta").find(".ovabrw_pickup_loc").val(),r=n.closest(".ovabrw-meta").find(".ovabrw_pickoff_loc").val(),i=n.closest(".ovabrw-meta").find(".select_ovabrw_package").val();n.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").css("display","inline-block"),O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_id_vehicle_rest",id_product:t,pickup_date:e,dropp_off:a,pickup_loc:o,dropoff_loc:r,package_id:i},success:function(e){var a=O.parseJSON(e),t=a.error,e=a.number_vehicle_available;if(t)n.closest(".ovabrw-meta").find(".ovabrw-error").css("display","inline-block"),n.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text(a.message);else{var o=a.vehicle_availables,r="";if(r+='<select id="ovabrw-id-vehicle" class="select_ovabrw_id_vehicle" name="ovabrw_id_vehicle[]">',o)for(var i in o)o.hasOwnProperty(i)&&(r+='<option value="'+o[i]+'">'+o[i]+"</option>");r+="</select>",n.closest(".ovabrw-meta").find('input[name="ovabrw_number_vehicle[]"]').attr("max",e),n.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").html("Max: "+e).css("display","inline-block"),n.closest(".sub-item").find(".ovabrw-id-vehicle-span").empty(),n.closest(".sub-item").find(".ovabrw-id-vehicle-span").html(r),n.closest(".ovabrw-meta").find(".ovabrw-error").css("display","none"),n.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text("")}}}),C.brw_create_order_view_total_cost(O(this))})},brw_create_order_change_deposit:function(){O('.ovabrw-order input[name="ovabrw_amount_deposite[]"]').on("change",function(){var e=O(this),a=parseFloat(e.val()),t=parseFloat(e.closest(".ovabrw-meta").find('.ovabrw-total-cost input[name="ovabrw_total_product[]"]').val());a<0?(e.closest(".ovabrw-meta").find(".ovabrw-error").css("display","inline-block"),e.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text("Deposit amount must be greater than 0")):(e.closest(".ovabrw-meta").find(".ovabrw-error").css("display","none"),e.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text("")),0<=a&&t?(t<a?(e.closest(".ovabrw-meta").find(".ovabrw-error").css("display","inline-block"),e.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text("Deposit amount must be less than or equal to Cost")):(e.closest(".ovabrw-meta").find(".ovabrw-error").css("display","none"),e.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text("")),(a=t-a)<0?(e.closest(".ovabrw-meta").find(".ovabrw-amount-remaining").css("display","none"),e.closest(".ovabrw-meta").find('.ovabrw-amount-remaining input[name="ovabrw_amount_remaining[]"]').val(0)):(e.closest(".ovabrw-meta").find(".ovabrw-amount-remaining").css("display","block"),e.closest(".ovabrw-meta").find('.ovabrw-amount-remaining input[name="ovabrw_amount_remaining[]"]').val(a))):(e.closest(".ovabrw-meta").find(".ovabrw-amount-remaining").css("display","none"),e.closest(".ovabrw-meta").find('.ovabrw-amount-remaining input[name="ovabrw_amount_remaining[]"]').val(0))})},brw_create_order_country:function(){0<O(".ovabrw_country").length&&O(".ovabrw_country").select2()},brw_ship_to_different_address:function(){O(".ship-to-different-address").each(function(){O(this).find('input[name="ship_to_different_address"]').on("click",function(){O(this).is(":checked")?(O(this).closest(".ovabrw-wrap").find(".ovabrw-shipping").css("display","flex"),O(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_first_name"]').prop("required",!0),O(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_last_name"]').prop("required",!0),O(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_phone"]').prop("required",!0),O(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_address_1"]').prop("required",!0),O(this).closest(".ovabrw-wrap").find('.ovabrw-shipping select[name="ship_ovabrw_country"]').prop("required",!0)):(O(this).closest(".ovabrw-wrap").find(".ovabrw-shipping").css("display","none"),O(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_first_name"]').prop("required",!1),O(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_last_name"]').prop("required",!1),O(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_phone"]').prop("required",!1),O(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_address_1"]').prop("required",!1),O(this).closest(".ovabrw-wrap").find('.ovabrw-shipping select[name="ship_ovabrw_country"]').prop("required",!1))})})},brw_create_order_change_resources:function(){O(document).on("change",".resources_order",function(e){C.brw_create_order_view_total_cost(O(this))})},brw_create_order_change_services:function(){O(document).on("change",".services_order",function(e){C.brw_create_order_view_total_cost(O(this))})},brw_create_order_ckf:function(){O("form#booking-filter .ovabrw-ckf-price").on("change",function(){C.brw_create_order_view_total_cost(O(this))}),O('form#booking-filter .ovabrw-file input[type="file"]').each(function(){O(this).on("change",function(e){e.preventDefault();var a=O(this),t=a.data("max-file-size"),o=a.data("max-file-size-msg"),r=a.data("formats"),i=a.data("file-mimes"),n=[];"object"==typeof i&&O.each(i,function(e,a){n.push(a)}),a.closest(".ovabrw-file").find(".ovabrw-file-name").html("");var _=this.files[0].name,e=this.files[0].size,i=this.files[0].type;_&&e&&i&&(a.closest(".ovabrw-file").find(".ovabrw-file-name").html(_),t<(e/1048576).toFixed(2)&&a.closest(".ovabrw-file").find(".ovabrw-file-name").html(o),-1==O.inArray(i,n)&&a.closest(".ovabrw-file").find(".ovabrw-file-name").html(r))})}),O("form#booking-filter .ovabrw-ckf-checkbox.ovabrw-required").on("change",function(){O(this).find('input[type="checkbox"]:checked').val()?O(this).find(".ovabrw-error").hide():O(this).find(".ovabrw-error").show()})},brw_create_order_submit:function(){O('form#booking-filter button[type="submit"]').on("click",function(a){var e=O(this).closest("form#booking-filter");e.find('input[type="file"]').each(function(){var e;O(this).prop("required")&&!O(this).val()&&(e=O(this).data("required"),O(this).closest(".ovabrw-file").find(".ovabrw-file-name").empty().html(e),a.preventDefault())}),e.find(".ovabrw-ckf-checkbox.ovabrw-required").each(function(){O(this).find('input[type="checkbox"]:checked').val()||(O(this).find(".ovabrw-error").show(),a.preventDefault())})})},brw_update_order_status:function(){O(document).on("change",".update_order_status",function(e){var a,t,o,r=O(this).children("option:selected").html(),i=O(this).children("option:selected").val(),r=confirm("Do you want to "+r+" Booking ?"),n=O(this);1==r&&""!=i&&(r=O(this).data("order_id"),a=O(this).children("option:selected").val().replace("wc-",""),t=O(this).closest(".order_status").find(".order-status"),o=O(this).closest(".order_status").find(".order-status span"),O.post(ajaxurl,{action:"update_order_status_woo",order_id:r,new_order_status:i},function(e){"error_permission"===e?alert(n.data("error-per-msg")):"false"===e?alert(n.data("error-update-msg")):(t.attr("class",""),t.addClass("order-status tips status-"+a),o.html(a))})),e.preventDefault()})},choosetime_full:function(){var a,t,o;switch("undefined"!=typeof brw_date_format&&(a=brw_date_format),"undefined"!=typeof brw_time_format&&0,"undefined"!=typeof brw_format_time&&(t=brw_format_time),"undefined"!=typeof first_day&&(o=first_day),a){case"d-m-Y":a="DD-MM-Y";break;case"m/d/Y":a="MM/DD/Y";break;case"Y/m/d":a="Y/MM/DD";break;case"Y-m-d":a="Y-MM-DD";break;default:a="DD-MM-Y"}O.datetimepicker.setDateFormatter({parseDate:function(e,a){a=moment(e,a);return!!a.isValid()&&a.toDate()},formatDate:function(e,a){return moment(e).format(a)}}),O(".datetimepicker_full").each(function(){var e=new Date,e={format:a+""+t,dayOfWeekStart:o,minDate:e,changeMonth:!0,changeYear:!0};O(this).datetimepicker(e)})},date_book:function(){O(".date_book").each(function(){var e;switch("undefined"!=typeof first_day&&(a=first_day),e="undefined"!=typeof brw_date_format?brw_date_format:e){case"d-m-Y":e="DD-MM-Y";break;case"m/d/Y":e="MM/DD/Y";break;case"Y/m/d":e="Y/MM/DD";break;case"Y-m-d":e="Y-MM-DD";break;default:e="DD-MM-Y"}new Date;O.datetimepicker.setDateFormatter({parseDate:function(e,a){a=moment(e,a);return!!a.isValid()&&a.toDate()},formatDate:function(e,a){return moment(e).format(a)}});var a={dateFormat:e,dayOfWeekStart:a,changeMonth:!0,step:30,changeYear:!0};O(this).datetimepicker(a)})},brw_change_deposit:function(){"no"===O(".ovabrw_metabox_car_rental #ovabrw_enable_deposit").val()?(O(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","none"),O(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","none"),O(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","none")):(O(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","block"),O(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","block"),O(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","block")),O(".ovabrw_metabox_car_rental #ovabrw_enable_deposit").on("change",function(){"no"===O(this).val()?(O(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","none"),O(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","none"),O(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","none")):(O(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","block"),O(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","block"),O(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","block"))}),O("body").on("change",".woocommerce_order_items input.amount_deposit",function(){var e=O(this).closest("tr.item"),a=O(this).val(),t=O("input.deposit_remaining",e),e=O("input.line_total",e);""!==a&&0<parseFloat(e.val())-parseFloat(a)?t.val(parseFloat(e.val())-parseFloat(a)):t.val("")}).on("change",".woocommerce_order_items input.line_total",function(){var e=O(this).closest("tr.item"),a=O("input.amount_remaining",e),t=O("input.deposit_paid",e),e=O(this).val();""!==t.val()&&0<=parseFloat(e)-parseFloat(t.val())?a.val(parseFloat(e)-parseFloat(t.val())):a.val("")})},brw_manage_vehicle:function(){var a,e=O(".ovabrw_metabox_car_rental #ovabrw_manage_store").val(),t="";"store"===e?(O(".ovabrw_metabox_car_rental .ovabrw_id_vehicle_wrap ").hide(),O(".ovabrw_metabox_car_rental .ovabrw_car_count_field ").css("display","block"),O(".ovabrw_metabox_car_rental .select_id_vehicle select").find("option").remove(),O(".ovabrw_metabox_car_rental .select_id_vehicle select").append(t)):(O(".ovabrw_metabox_car_rental .ovabrw_car_count_field ").css("display","none"),O(".ovabrw_metabox_car_rental .ovabrw_id_vehicle_wrap ").show()),O(".ovabrw_metabox_car_rental #ovabrw_manage_store").on("change",function(){var e=O(this).val();t="","store"===e?(O(".ovabrw_metabox_car_rental .ovabrw_id_vehicle_wrap ").hide(),O(".ovabrw_metabox_car_rental .ovabrw_car_count_field ").css("display","block"),O(".ovabrw_metabox_car_rental .select_id_vehicle select").find("option").remove(),O(".ovabrw_metabox_car_rental .select_id_vehicle select").append(t)):(O(".ovabrw_metabox_car_rental .ovabrw_id_vehicle_wrap ").show(),O(".ovabrw_metabox_car_rental .ovabrw_car_count_field ").css("display","none"),a=O(".ovabrw_metabox_car_rental .select_id_vehicle .ovabrw_html_option").data("html_all_id_vehicle"),O(".ovabrw_metabox_car_rental .select_id_vehicle select").find("option").remove(),O(".ovabrw_metabox_car_rental .select_id_vehicle select").append(a))})},brw_change_rental_type:function(){O("body").on("woocommerce-product-type-change",function(e,a,t){"ovabrw_car_rental"==a?(O(".show_if_ovabrw_car_rental").show(),O(".product_data_tabs .general_options").show(),O("ul.product_data_tabs li").removeClass("active"),O("ul.product_data_tabs li.general_options").addClass("active"),O("#shipping_product_data").css("display","none"),O("#general_product_data").css("display","block"),O(" ul.product_data_tabs li.general_tab").addClass("show_if_variable_bulk").show(),O("#general_product_data .pricing").addClass("show_if_variable_bulk").show(),O("#general_product_data ._sale_price_field").hide(),O("#general_product_data .sale_price_dates_fields").hide(),O("#general_product_data .pricing").css("border-bottom","none"),O("ul.product_data_tabs li.inventory_tab").show(),O(".inventory_options").addClass("show_if_variable_bulk").show(),O("#inventory_product_data ._manage_stock_field").addClass("show_if_variable_bulk").show(),O("#inventory_product_data ._sold_individually_field").parent().addClass("show_if_variable_bulk").show(),O("#inventory_product_data ._sold_individually_field").addClass("show_if_variable_bulk").show()):"grouped"==a?(O(".show_if_ovabrw_car_rental").hide(),O(".product_data_tabs .general_options").hide()):(O(".show_if_ovabrw_car_rental").hide(),O("#general_product_data ._regular_price_field label span").hide(),O("#general_product_data ._sale_price_field").show(),O("#general_product_data .sale_price_dates_fields").show(),O("#general_product_data .pricing").css("border-bottom","1px solid #eee"))})},brw_manage_feature_text:function(){O(".ovabrw_features a.insert_rt_feature").click(function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_features").find("tbody").append(e)}),O(".ovabrw_metabox_car_rental").on("click",".delete_feature",function(e){e.preventDefault(),O(this).closest(".tr_rt_feature").remove()}),O(".ovabrw_other_features a.insert_rt_other_feature").click(function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_other_features").find("tbody").append(e)}),O(".ovabrw_metabox_car_rental").on("click",".delete_other_feature",function(e){e.preventDefault(),O(this).closest(".tr_rt_other_feature").remove()})},brw_add_extra_feature:function(){O(".add_extra_features").click(function(e){e.preventDefault(),O(".product_data_tabs li").removeClass("active"),O(".product_data_tabs .attribute_options").addClass("active"),O(".ovabrw_metabox_car_rental").hide(),O("#product_attributes").show()})},brw_unavailable_time:function(){O(".ovabrw_rt_untime a.insert_rt_untime").click(function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_rt_untime").find("tbody").append(e),C.ovabrw_datepicker()}),O(".ovabrw_metabox_car_rental").on("click",".delete_untime",function(e){e.preventDefault(),O(this).closest(".tr_rt_untime").remove()})},brw_local_price:function(){O(".ovabrw_local_price a.insert_local_price").click(function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_local_price").find("tbody").append(e)}),O(".ovabrw_metabox_car_rental").on("click",".delete_local_price",function(e){e.preventDefault(),O(this).closest(".tr_rt_local_price").remove()}),O(".ovabrw_local_price ").on("change",'select[name="ovabrw_pickup_location[]"]',function(){var e=O(this);e.val()?(e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').prop("disabled",!1),e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').val("")):e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').prop("disabled",!0)}),O(".ovabrw_local_price ").on("click",'select[name="ovabrw_dropoff_location[]"]',function(){var a=O(this),t=a.closest(".tr_rt_local_price").find('select[name="ovabrw_pickup_location[]"]'),o=t.val();o?a.prop("disabled",!1):a.prop("disabled",!0);var r=[];O('.ovabrw_local_price select[name="ovabrw_pickup_location[]"]').each(function(e){var a=O(this).not(t).val();o==a&&(a=O(this).closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').val(),r.push(a))}),r&&r.forEach(function(e){e&&(e=e.replace(" ","\\ "),a.find("option[value="+e+"]").prop("disabled",!0))})})},brw_setup_location:function(){O(".ovabrw_st_locations a.insert_st_location").on("click",function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_st_locations").find("tbody").append(e)}),O(".ovabrw_metabox_car_rental").on("click",".delete_st_location",function(e){e.preventDefault(),O(this).closest(".tr_setup_loc").remove()}),O(".ovabrw_st_locations").on("change",'select[name="ovabrw_st_pickup_loc[]"]',function(){O(this).val()?(O(this).closest(".tr_setup_loc").find('select[name="ovabrw_st_dropoff_loc[]"]').prop("disabled",!1),O(this).closest(".tr_setup_loc").find('select[name="ovabrw_st_dropoff_loc[]"]').val("")):O(this).closest(".tr_setup_loc").find('select[name="ovabrw_st_dropoff_loc[]"]').prop("disabled",!0)}),O(".ovabrw_st_locations").on("click",'select[name="ovabrw_st_dropoff_loc[]"]',function(){var a=O(this),t=a.closest(".tr_setup_loc").find('select[name="ovabrw_st_pickup_loc[]"]'),o=t.val();o?a.prop("disabled",!1):a.prop("disabled",!0);var r=[];O('.ovabrw_st_locations select[name="ovabrw_st_pickup_loc[]"]').each(function(e){var a=O(this).not(t).val();o==a&&(a=O(this).closest(".tr_setup_loc").find('select[name="ovabrw_st_dropoff_loc[]"]').val(),r.push(a))}),r&&r.forEach(function(e){e&&(e=e.replace(" ","\\ "),a.find("option[value="+e+"]").prop("disabled",!0))})})},brw_manage_resource:function(){O(".ovabrw_resources a.insert_resources").click(function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_resources").find("tbody").append(e);e=O(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?O(this).closest(".ovabrw_resources").find("select option[value='hours']").remove():"hour"===e?O(this).closest(".ovabrw_resources").find("select option[value='days']").remove():"transportation"!==e&&"taxi"!==e||(O(this).closest(".ovabrw_resources").find("select option[value='hours']").remove(),O(this).closest(".ovabrw_resources").find("select option[value='days']").remove())}),O(".ovabrw_metabox_car_rental").on("click",".delete_resource",function(e){e.preventDefault(),O(this).closest(".tr_rt_resource").remove()})},brw_manage_service:function(){O(".ovabrw_metabox_car_rental").on("click",".ovabrw_service .insert_service_group",function(e){e.preventDefault();e=O(this).data("row");O(this).closest(".ovabrw_service").find(".wrap_ovabrw_service_group").last().append(e),C.brw_sort_key_service()}),O(document).on("click",".ovabrw_service .insert_service_option",function(e){e.preventDefault();e=O(this).parent("th").find(".ovabrw_content_service table tbody").html();O(this).closest("table.widefat").find("tbody.wrap_service").append(e);e=O(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?O(this).closest(".ovabrw_service").find(".wrap_service").find("select option[value='hours']").remove():"hour"===e?O(this).closest(".ovabrw_service").find(".wrap_service").find("select option[value='days']").remove():"transportation"!==e&&"taxi"!==e||(O(this).closest(".ovabrw_service").find(".wrap_service").find("select option[value='hours']").remove(),O(this).closest(".ovabrw_service").find(".wrap_service").find("select option[value='days']").remove()),C.brw_sort_key_service()}),O(".ovabrw_metabox_car_rental").on("click",".delete_service",function(e){e.preventDefault(),O(this).closest(".tr_rt_service").remove(),C.brw_sort_key_service()}),O(".ovabrw_metabox_car_rental").on("click",".delete_service_group",function(e){e.preventDefault(),O(this).closest(".ovabrw_service_group").remove(),C.brw_sort_key_service()})},brw_manage_extra_time:function(){O(".ovabrw_rt_extra_time a.insert_extra_time").on("click",function(e){e.preventDefault(),O(this).closest(".ovabrw_rt_extra_time").find("tbody").append(O(this).data("row"))}),O(".ovabrw_metabox_car_rental").on("click",".remove_extra_time",function(e){e.preventDefault(),O(this).closest(".tr_rt_extra_time").remove()})},brw_manage_discount_distance:function(){O(".ovabrw_rt_discount_distance a.insert_discount_distance").on("click",function(e){e.preventDefault(),O(this).closest(".ovabrw_rt_discount_distance").find("tbody").append(O(this).data("row"))}),O(".ovabrw_metabox_car_rental").on("click",".remove_discount_distance",function(e){e.preventDefault(),O(this).closest(".tr_rt_discount_distance").remove()})},brw_manage_special_time_distance:function(){O(".ovabrw_st_distance a.btn-add-st-distance").on("click",function(e){e.preventDefault();var a=O(this).data("row"),e=O(".ovabrw_st_distance .row_st_distance").length,a=a.replace('data-index=""','data-index="'+e+'"');O(this).closest(".ovabrw_st_distance").find("tbody").first().append(a),C.ovabrw_datepicker()}),O(".ovabrw_metabox_car_rental").on("click","a.btn-remove-st-distance",function(e){e.preventDefault(),O(this).closest(".row_st_distance").remove(),function(){var e=0;O(".ovabrw_st_distance .row_st_distance").each(function(){O(this).attr("data-index",e),e++});for(var a=O(".ovabrw_st_distance .row_st_distance").length,t=0;t<a;t++)O(".ovabrw_st_distance .row_st_distance").each(function(){O(this).attr("data-index")==t&&(O(this).find(".ovabrw_st_discount_distance_from ").attr("name","ovabrw_st_discount_distance["+t+"][from][]"),O(this).find(".ovabrw_st_discount_distance_to").attr("name","ovabrw_st_discount_distance["+t+"][to][]"),O(this).find(".ovabrw_st_discount_distance_price").attr("name","ovabrw_st_discount_distance["+t+"][price][]"))})}()}),O(".ovabrw_metabox_car_rental").on("click","a.btn-add-st-discount-distance",function(e){e.preventDefault();var a=O(this).closest(".row_st_distance").data("index"),e=(e=O(this).closest(".ovabrw_st_distance").find('input[name="ovabrw_html_st_discount_distance"]').data("html")).replace(/ovabrw_key/g,a);O(this).closest(".ovabrw_st_discount_distance").find("tbody").first().append(e)}),O(".ovabrw_metabox_car_rental").on("click","a.btn-remove-st-discount-distance",function(e){e.preventDefault(),O(this).closest(".row_st_discount_distance").remove()})},brw_sort_key_service:function(){var e=0;O(".ovabrw_service_group").each(function(){O(this).attr("data-pos",e),e++});for(var a=0;a<e;a++)O(".ovabrw_service_group").each(function(){O(this).attr("data-pos")==a&&(O(this).find('.wrap_service input[name*="ovabrw_service_id"]').attr("name","ovabrw_service_id["+a+"][]"),O(this).find('.wrap_service input[name*="ovabrw_service_name"]').attr("name","ovabrw_service_name["+a+"][]"),O(this).find('.wrap_service input[name*="ovabrw_service_price"]').attr("name","ovabrw_service_price["+a+"][]"),O(this).find('.wrap_service select[name*="ovabrw_service_duration_type"]').attr("name","ovabrw_service_duration_type["+a+"][]"))})},brw_manage_cus_taxonomy:function(){t("loaded"),O("#product_catchecklist input").length&&O("#product_catchecklist input").on("change",function(e){var o=O(this);o.attr("disabled","disabled"),t("changed");var a=function(e){const a=document.querySelectorAll(`input[name="${e}"]:checked`);let t=[];return a.forEach(e=>{t.push(e.value)}),t}("tax_input[product_cat][]");O.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_custom_tax_in_cat",checked_tax:a},success:function(e){if(o.removeAttr("disabled"),e){var a=e.split(",");if(a.length)for(var t=0;t<a.length;t++)0<O("#"+a[t]+"div").length&&O("#"+a[t]+"div").show()}}})})},brw_ui_select_cus_tax:function(){0<O(".ovabrw_custom_tax_with_cat").length&&O(".ovabrw_custom_tax_with_cat").select2(),0<O('select[name="product_id"]').length&&O('select[name="product_id"]').select2(),O('select[name="ovabrw_choose_custom_checkout_field"]').each(function(){function e(e){var a=e.closest("form").find('select[name="ovabrw_custom_checkout_field[]"]');a.length&&("all"==e.val()?a.closest(".show_special_checkout_field").hide():a.closest(".show_special_checkout_field").show())}e(O(this)),O(this).on("change",function(){e(O(this))})})},brw_manage_period_time:function(){O(".ovabrw_petime a.insert_petime_record").click(function(e){e.preventDefault();var a=O(this).data("row"),e=O(".ovabrw_petime .row_petime_record").length,a=a.replace('data-pos=""','data-pos="'+e+'"');O(this).closest(".ovabrw_petime").find("tbody").first().append(a),C.choosehour(),C.change_pack_type()}),O(".ovabrw_metabox_car_rental").on("click",".ovabrw_petime .delete_petime",function(e){e.preventDefault(),O(this).closest(".row_petime_record").remove(),C.brw_sort_petime()}),O(".ovabrw_metabox_car_rental").on("click","a.insert_petime_discount",function(e){e.preventDefault();var a=O(this).find(".wrap_petime_discount tbody").html(),e=O(this).closest(".row_petime_record").data("pos"),a=a.replace(/ovabrw_key/g,e);O(this).closest(".ovabrw_petime_discount").find("tbody").first().append(a),C.ovabrw_datepicker()}),O(".ovabrw_metabox_car_rental").on("click",".ovabrw_petime .delete_petime_discount",function(e){e.preventDefault(),O(this).closest(".tr_petime_discount").remove()}),O("#ovabrw_unfixed_time").on("change",function(){"yes"==O("select#ovabrw_unfixed_time :selected").val()?(O(".period_times").hide(),O(".period_times_unfixed").show()):(O(".period_times").show(),O(".period_times_unfixed").hide())})},brw_sort_petime:function(){var e=0;O(".ovabrw_petime .row_petime_record").each(function(){O(this).attr("data-pos",e),e++});for(var a=O(".ovabrw_petime .row_petime_record").length,t=0;t<a;t++)O(".wrap_petime .row_petime_record").each(function(){O(this).attr("data-pos")==t&&(O(this).find("tbody.real .ovabrw_petime_discount_price").attr("name","ovabrw_petime_discount["+t+"][price][]"),O(this).find("tbody.real .ovabrw_petime_discount_start_time").attr("name","ovabrw_petime_discount["+t+"][start_time][]"),O(this).find("tbody.real .ovabrw_petime_discount_end_time").attr("name","ovabrw_petime_discount["+t+"][end_time][]"))})},brw_manage_show_hide_field_at_frontend:function(){"new_form"!=O("#ovabrw_manage_extra_tab").val()&&O(".ovabrw_extra_tab_shortcode_field").css("display","none"),O("#ovabrw_manage_extra_tab").on("change",function(){O(".ovabrw_extra_tab_shortcode_field").css("display","block"),"new_form"!=O(this).val()&&O(".ovabrw_extra_tab_shortcode_field").css("display","none")}),"new_time"!=O("#ovabrw_manage_time_book_start").val()&&O(".ovabrw_product_time_to_book_start_field").css("display","none"),O("#ovabrw_manage_time_book_start").on("change",function(){O(".ovabrw_product_time_to_book_start_field").css("display","block"),"new_time"!=O(this).val()&&O(".ovabrw_product_time_to_book_start_field").css("display","none")}),"new_time"!=O("#ovabrw_manage_time_book_end").val()&&O(".ovabrw_product_time_to_book_end_field").css("display","none"),O("#ovabrw_manage_time_book_end").on("change",function(){O(".ovabrw_product_time_to_book_end_field").css("display","block"),"new_time"!=O(this).val()&&O(".ovabrw_product_time_to_book_end_field").css("display","none")}),"new_time"!=O("#ovabrw_manage_default_hour_start").val()&&O(".ovabrw_product_default_hour_start_field").css("display","none"),O("#ovabrw_manage_default_hour_start").on("change",function(){O(".ovabrw_product_default_hour_start_field").css("display","block"),"new_time"!=O(this).val()&&O(".ovabrw_product_default_hour_start_field").css("display","none")}),"new_time"!=O("#ovabrw_manage_default_hour_end").val()&&O(".ovabrw_product_default_hour_end_field").css("display","none"),O("#ovabrw_manage_default_hour_end").on("change",function(){O(".ovabrw_product_default_hour_end_field").css("display","block"),"new_time"!=O(this).val()&&O(".ovabrw_product_default_hour_end_field").css("display","none")});var e=O("#ovabrw_price_type").children("option:selected").val(),a=O("#ovabrw_define_1_day").children("option:selected").val();"day"==e&&"hotel"==a&&O(".none-day-hotel").css("display","none"),O("#ovabrw_define_1_day").on("change",function(){O(".none-day-hotel").css("display","block"),"hotel"==O(this).val()&&O(".none-day-hotel").css("display","none")}),"new"!==O("#ovabrw_manage_custom_checkout_field").val()&&O(".ovabrw_product_custom_checkout_field_field").css("display","none"),O("#ovabrw_manage_custom_checkout_field").on("change",function(){O(".ovabrw_product_custom_checkout_field_field").css("display","block"),"all"==O(this).val()&&O(".ovabrw_product_custom_checkout_field_field").css("display","none")}),"new"!==O("#ovabrw_label_pickup_date_product").val()&&O(".ovabrw_new_pickup_date_product_field").css("display","none"),O("#ovabrw_label_pickup_date_product").on("change",function(){O(".ovabrw_new_pickup_date_product_field").css("display","block"),"new"!==O(this).val()&&O(".ovabrw_new_pickup_date_product_field").css("display","none")}),"new"!==O("#ovabrw_label_dropoff_date_product").val()&&O(".ovabrw_new_dropoff_date_product_field").css("display","none"),O("#ovabrw_label_dropoff_date_product").on("change",function(){O(".ovabrw_new_dropoff_date_product_field").css("display","block"),"new"!==O(this).val()&&O(".ovabrw_new_dropoff_date_product_field").css("display","none")})},brw_manage_globa_discount:function(){O(".ovabrw_metabox_car_rental").on("click",".ovabrw_global_discount .delete",function(e){e.preventDefault(),O(this).closest(".row_discount").remove()}),O(".ovabrw_global_discount a.insert_discount").click(function(e){e.preventDefault();var a=O(this).data("row"),e=O(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?a=a.replace('<option value="hours">Hour(s)</option>',""):"hour"===e&&(a=a.replace('<option value="days">Day(s)</option>',"")),O(this).closest(".ovabrw_global_discount").find("tbody").append(a)})},brw_manage_special_time_sort_rt:function(){var e=0;O(".ovabrw_rt .row_rt_record").each(function(){O(this).attr("data-pos",e),e++});for(var a=O(".ovabrw_rt .row_rt_record").length,t=0;t<a;t++)O(".wrap_rt .row_rt_record").each(function(){O(this).attr("data-pos")==t&&(O(this).find("tbody.real .ovabrw_rt_discount_price").attr("name","ovabrw_rt_discount["+t+"][price][]"),O(this).find("tbody.real .ovabrw_rt_discount_duration_min").attr("name","ovabrw_rt_discount["+t+"][min][]"),O(this).find("tbody.real .ovabrw_rt_discount_duration_max").attr("name","ovabrw_rt_discount["+t+"][max][]"),O(this).find("tbody.real .ovabrw_rt_discount_duration_type").attr("name","ovabrw_rt_discount["+t+"][duration_type][]"))})},brw_manage_special_time:function(){O(".ovabrw_rt a.insert_rt_record").click(function(e){e.preventDefault();var a=O(this).data("row"),e=O(".ovabrw_rt .row_rt_record").length,a=a.replace('data-pos=""','data-pos="'+e+'"'),e=O(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?a=a.replace('<input type="text" class="ovabrw_rt_price_hour" placeholder="10.5" name="ovabrw_rt_price_hour[]" value="" />',""):"hour"===e&&(a=a.replace('<input type="text" class="ovabrw_rt_price" placeholder="10.5" name="ovabrw_rt_price[]" value="" />',"")),O(this).closest(".ovabrw_rt").find("tbody").first().append(a),C.ovabrw_datepicker()}),O(".ovabrw_metabox_car_rental").on("click",".ovabrw_rt .delete_rt",function(e){e.preventDefault(),O(this).closest(".row_rt_record").remove(),C.brw_manage_special_time_sort_rt()}),O(".ovabrw_metabox_car_rental").on("click","a.insert_rt_discount",function(e){e.preventDefault();var a=O(this).find(".wrap_rt_discount tbody").html(),e=O(this).closest(".row_rt_record").data("pos"),a=a.replace(/ovabrw_key/g,e),e=O(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?a=a.replace('<option value="hours">Hour(s)</option>',""):"hour"===e&&(a=a.replace('<option value="days">Day(s)</option>',"")),O(this).closest(".ovabrw_rt_discount").find("tbody").first().append(a),C.ovabrw_datepicker()}),O(".ovabrw_metabox_car_rental").on("click",".ovabrw_rt .delete_discount",function(e){e.preventDefault(),O(this).closest(".tr_rt_discount").remove()})},brw_manage_vehicle_with_location:function(){"yes"==O("input[type=radio][name=ovabrw_vehicle_require_location]:checked").val()?O("#meta-box-id-vehicle .ovabrw-row.location_vehicle").css("display","block"):O("#meta-box-id-vehicle .ovabrw-row.location_vehicle").css("display","none"),O("input[type=radio][name=ovabrw_vehicle_require_location]").change(function(){"yes"==this.value?O("#meta-box-id-vehicle .ovabrw-row.location_vehicle").css("display","block"):"no"==this.value&&O("#meta-box-id-vehicle .ovabrw-row.location_vehicle").css("display","none")})},brw_show_hide_field_edit_product(){var a="Regular Price / Day";"undefined"!=typeof label_regular_per_day&&(a=label_regular_per_day);var e,t=["hour","transportation","taxi"];O("#product-type").length&&("ovabrw_car_rental"==O("#product-type").val()?O("#ovabrw_price_type").length&&(e=O("#ovabrw_price_type").val(),-1==O.inArray(e,t)?(O("#general_product_data .pricing").addClass("show_if_variable_bulk").show(),O("#general_product_data ._regular_price_field").show(),O("#general_product_data ._sale_price_field").hide(),O("#general_product_data ._regular_price_field label").first().html(" ").append("<span> "+a+"</span>")):(O("#general_product_data ._regular_price_field").hide(),O("#general_product_data .pricing").hide(),O("#general_product_data ._sale_price_field").hide())):(O("#general_product_data ._regular_price_field label span").show(),O("#general_product_data ._regular_price_field label").first().html(" ").append("<span> Price</span>")),O("#product-type").on("change",function(){var e;"ovabrw_car_rental"==O("#product-type").val()?O("#ovabrw_price_type").length&&(e=O("#ovabrw_price_type").val(),-1==O.inArray(e,t)?(O("#general_product_data .pricing").addClass("show_if_variable_bulk").show(),O("#general_product_data ._regular_price_field").show(),O("#general_product_data ._sale_price_field").hide(),O("#general_product_data ._regular_price_field label").first().html(" ").append("<span> "+a+"</span>")):(O("#general_product_data ._regular_price_field").hide(),O("#general_product_data .pricing").hide(),O("#general_product_data ._sale_price_field").hide())):(O("#general_product_data ._regular_price_field label span").show(),O("#general_product_data ._regular_price_field label").first().html(" ").append("<span> Price</span>"))})),O(".ovabrw_metabox_car_rental").each(function(){O(this).bind("change_price_type",function(){var e=O(this).find("select#ovabrw_price_type :selected").val();O(".ovabrw_metabox_car_rental").attr("ova_price_type",e),O(".ovabrw_metabox_car_rental ._regular_price_field label span").remove(),O(this).find(".ovabrw_taxi_map").hide(),"period_time"==e?(O("#general_product_data ._regular_price_field").hide(),O("#general_product_data").find("._regular_price_field .wc_input_price").val("0"),O("#regular_price").val(0),O(this).find(".price_period_time").show(),O(this).find("._regular_price_field").hide(),O(this).find(".price_not_period_time").hide(),O(this).find(".ovabrw_regul_price_hour_field").hide(),O(this).find(".ovabrw_regul_price_taxi_field").hide(),O(this).find(".ovabrw_price_daily").hide(),O(this).find(".ovabrw_rent_time_min_wrap").hide(),O(this).find(".ovabrw_define_1_day_field").hide(),O(this).find(".ovabrw_local_price_wrap").hide(),O(this).find(".ovabrw_choose_location").show(),O(this).find(".ovabrw_dropoff_date_by_setting_field").hide(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field").show(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field").hide(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field #ovabrw_prepare_vehicle_day").val(0),O(".ovabrw_metabox_car_rental .ovabrw_unfixed_time_field").show(),O(this).find(".manage-time-book-end-field").show(),O(this).find(".manager-show-pickup-location").show(),O(this).find(".manager-show-dropoff-location").show(),O(this).find(".manager-show-dropoff-date").show()):"day"==e?(O("#general_product_data .options_group.pricing").show(),O("#general_product_data ._regular_price_field").show(),O("#general_product_data ._regular_price_field label").first().html(" ").append("<span> "+a+"</span>"),O(".ovabrw_metabox_car_rental .pricing").addClass("show_if_variable_bulk").show(),O(".ovabrw_metabox_car_rental ._sale_price_field").hide(),O(".ovabrw_metabox_car_rental ._regular_price_field label").first().html(" ").append("<span> "+a+"</span>"),O(".wcfm_product_manager_general_fields .sale_price").hide(),O(".wcfm_product_manager_general_fields #sale_price").hide(),O(".wcfm_product_manager_general_fields .sales_schedule").hide(),O(this).find("._regular_price_field").show(),O(this).find(".ovabrw_price_daily").show(),O(this).find(".ovabrw_regul_price_hour_field").hide(),O(this).find(".ovabrw_regul_price_taxi_field").hide(),O(this).find(".price_period_time").hide(),O(this).find(".price_not_period_time").show(),O(this).find(".ovabrw_dropoff_date_by_setting_field").hide(),O(this).find(".ovabrw_rent_time_min_wrap").show(),O(this).find(".ovabrw_rent_day_max_field ").show(),O(this).find(".ovabrw_rent_hour_max_field ").hide(),O(this).find(".ovabrw_rent_day_min_field ").show(),O(this).find(".ovabrw_rent_hour_min_field ").hide(),O(this).find(".ovabrw_define_1_day_field ").show(),O(this).find(".ovabrw_local_price_wrap").hide(),O(this).find(".ovabrw_choose_location").show(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field").hide(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field #ovabrw_prepare_vehicle").val(0),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field").show(),O(".ovabrw_metabox_car_rental .ovabrw_unfixed_time_field").hide(),O(this).find(".manage-time-book-end-field").show(),O(this).find(".manager-show-pickup-location").show(),O(this).find(".manager-show-dropoff-location").show(),O(this).find(".manager-show-dropoff-date").show()):"hour"==e?(O("#general_product_data ._regular_price_field").hide(),O("#general_product_data").find("._regular_price_field .wc_input_price").val(0),O("#regular_price").val(0),O(this).find(".ovabrw_price_daily").hide(),O(this).find("._regular_price_field").hide(),O(this).find(".ovabrw_regul_price_hour_field").show(),O(this).find(".ovabrw_regul_price_taxi_field").hide(),O(this).find(".price_period_time").hide(),O(this).find(".price_not_period_time").show(),O(this).find(".ovabrw_dropoff_date_by_setting_field").hide(),O(this).find(".ovabrw_rent_time_min_wrap").show(),O(this).find(".ovabrw_rent_day_max_field ").hide(),O(this).find(".ovabrw_rent_hour_max_field ").show(),O(this).find(".ovabrw_rent_day_min_field ").hide(),O(this).find(".ovabrw_rent_hour_min_field ").show(),O(this).find(".ovabrw_define_1_day_field ").hide(),O(this).find(".ovabrw_local_price_wrap").hide(),O(this).find(".ovabrw_choose_location").show(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field").show(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field").hide(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field #ovabrw_prepare_vehicle_day").val(0),O(".ovabrw_metabox_car_rental .ovabrw_unfixed_time_field").hide(),O(this).find(".manager-show-pickup-date .ovabrw_show_pickup_date_product_field").hide(),O(this).find(".manage-time-book-end-field").show(),O(this).find(".manager-show-pickup-location").show(),O(this).find(".manager-show-dropoff-location").show(),O(this).find(".manager-show-dropoff-date").show()):"mixed"==e?(O("#general_product_data .options_group.pricing").show(),O("#general_product_data ._regular_price_field").show(),O("#general_product_data ._regular_price_field label").first().html("").append("<span> "+a+"</span>"),O(".ovabrw_metabox_car_rental .pricing").addClass("show_if_variable_bulk").show(),O(".ovabrw_metabox_car_rental ._sale_price_field").hide(),O(".ovabrw_metabox_car_rental ._regular_price_field label").first().html("").append("<span> "+a+"</span>"),O(this).find("._regular_price_field").show(),O(this).find(".ovabrw_price_daily").show(),O(this).find(".ovabrw_regul_price_hour_field").show(),O(this).find(".ovabrw_regul_price_taxi_field").hide(),O(this).find(".price_period_time").hide(),O(this).find(".price_not_period_time").show(),O(this).find(".ovabrw_dropoff_date_by_setting_field").hide(),O(this).find(".ovabrw_rent_time_min_wrap").show(),O(this).find(".ovabrw_regul_price_hour_field").show(),O(this).find(".ovabrw_rent_day_max_field ").hide(),O(this).find(".ovabrw_rent_hour_max_field ").show(),O(this).find(".ovabrw_rent_day_min_field ").hide(),O(this).find(".ovabrw_rent_hour_min_field ").show(),O(this).find(".ovabrw_define_1_day_field ").hide(),O(this).find(".ovabrw_local_price_wrap").hide(),O(this).find(".ovabrw_choose_location").show(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field").show(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field").hide(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field #ovabrw_prepare_vehicle_day").val(0),O(".ovabrw_metabox_car_rental .ovabrw_unfixed_time_field").hide(),O(this).find(".manage-time-book-end-field").show(),O(this).find(".manager-show-pickup-location").show(),O(this).find(".manager-show-dropoff-location").show(),O(this).find(".manager-show-dropoff-date").show()):"transportation"==e?(O("#general_product_data ._regular_price_field").hide(),O("#general_product_data").find("._regular_price_field .wc_input_price").val("0"),O("#regular_price").val(0),O(this).find(".ovabrw_local_price_wrap").show(),O(this).find(".ovabrw_choose_location").hide(),O(this).find(".ovabrw_price_daily").hide(),O(this).find("._regular_price_field").hide(),O(this).find(".ovabrw_regul_price_hour_field").hide(),O(this).find(".ovabrw_regul_price_taxi_field").hide(),O(this).find(".price_not_period_time").hide(),O(this).find(".ovabrw_define_1_day_field ").hide(),O(this).find(".price_period_time").hide(),O(this).find(".ovabrw_rent_time_min_wrap ").hide(),O(this).find(".ovabrw_dropoff_date_by_setting_field").show(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field").hide(),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field #ovabrw_prepare_vehicle").val(0),O(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field").show(),O(".ovabrw_metabox_car_rental .ovabrw_unfixed_time_field").hide(),O(this).find(".manage-time-book-end-field").show(),O(this).find(".manager-show-pickup-location").show(),O(this).find(".manager-show-dropoff-location").show(),O(this).find(".manager-show-dropoff-date").show()):"taxi"==e&&(O("#general_product_data ._regular_price_field").hide(),O(this).find(".ovabrw_regul_price_taxi_field").show(),O(this).find(".ovabrw_taxi_map").show(),O(this).find(".ovabrw_regul_price_hour_field").hide(),O(this).find(".ovabrw_unfixed_time_field").hide(),O(this).find(".ovabrw_define_1_day_field").hide(),O(this).find(".ovabrw_prepare_vehicle_day_field").hide(),O(this).find(".ovabrw_price_daily").hide(),O(this).find(".ovabrw_local_price_wrap").hide(),O(this).find(".price_period_time").hide(),O(this).find(".price_not_period_time").hide(),O(this).find(".ovabrw_choose_location").hide(),O(this).find(".ovabrw_rent_time_min_wrap").hide(),O(this).find(".manage-time-book-end-field").hide(),O(this).find(".manager-show-pickup-location").hide(),O(this).find(".manager-show-dropoff-location").hide(),O(this).find(".manager-show-dropoff-date").hide())}),O(this).trigger("change_price_type"),O(this).find("select#ovabrw_price_type").change(function(){O(this).trigger("change_price_type")})}),O("#ovabrw-rental-type").on("change",function(){"day"!==O(this).val()?O(".rental_define_day").css("display","none"):O(".rental_define_day").css("display","block")})},brw_product_templates(){0<O('select[name="ova_brw_template_elementor_template"]').length&&O('select[name="ova_brw_template_elementor_template"]').select2()},brw_product_map(){var e,a;O.fn.product_map=function(e){e=O.extend({lat:-33.8688,lng:151.2195,zoom:17},e);var a=new google.maps.Map(document.getElementById("admin_show_map"),{center:{lat:e.lat,lng:e.lng},zoom:e.zoom,gestureHandling:"cooperative"}),e=document.getElementById("pac-input"),t=new google.maps.places.Autocomplete(e);t.bindTo("bounds",a),a.controls[google.maps.ControlPosition.TOP_LEFT].push(e);var e=O("#pac-input").val(),o=new google.maps.InfoWindow({content:e}),r=new google.maps.Marker({map:a,position:a.getCenter()});r.addListener("click",function(){o.open(a,r)}),t.addListener("place_changed",function(){o.close();var e=t.getPlace();O("#map_info #ovabrw_address").val(O("input#pac-input").val()),e.geometry&&(e.geometry.viewport?a.fitBounds(e.geometry.viewport):(a.setCenter(e.geometry.location),a.setZoom(17)),r.setPlace({placeId:e.place_id,location:e.geometry.location}),r.setVisible(!0),O("#infowindow-content #place-name").val(e.name),O("#map_info #ovabrw_address").val(e.formatted_address),O("#map_info #ovabrw_latitude").val(e.geometry.location.lat()),O("#map_info #ovabrw_longitude").val(e.geometry.location.lng()),o.setContent(e.formatted_address),o.open(a,r))})},"undefined"!=typeof google&&0<O("#admin_show_map").length&&(e=parseFloat(O("input#ovabrw_latitude").val()),a=parseFloat(O("input#ovabrw_longitude").val()),O("#admin_show_map").product_map({lat:e,lng:a,zoom:17}))},brw_admin_settings(){function e(e){var a;e&&(a=e.closest("tbody").find('select[name="ova_brw_request_booking_order_status"]'),"yes"==e.val()?a.closest("tr").show():a.closest("tr").hide())}function a(){O('.ovabrw_waypoint_field input[name="ovabrw_waypoint"]:checked').val()?O(".ovabrw_waypoint_field .max_waypoint").show():O(".ovabrw_waypoint_field .max_waypoint").hide()}function t(){O('.ovabrw_bounds_field input[name="ovabrw_bounds"]:checked').val()?O(".ovabrw_bounds_field .coordinates").css("display","block"):O(".ovabrw_bounds_field .coordinates").hide()}O('select[name="ova_brw_request_booking_create_order"]').each(function(){e(O(this)),O(this).on("change",function(){e(O(this))})}),a(),O('.ovabrw_waypoint_field input[name="ovabrw_waypoint"]').on("change",function(){a()}),t(),O('.ovabrw_bounds_field input[name="ovabrw_bounds"]').on("change",function(){t()}),O('.ovabrw_restrictions_field select[name="ovabrw_restrictions[]"]').select2({maximumSelectionLength:5,allowClear:!0})},brw_wc_global_settings(){O(".ovabrw-wcst-global .wcst-title").on("click",function(e){e.preventDefault();var a=O(this);a.toggleClass("active");e=a.next(".ovabrw-wcst-fields");e.height()?a.next(".ovabrw-wcst-fields").css({"max-height":0,overflow:"hidden"}):(a.next(".ovabrw-wcst-fields").css("max-height",e.prop("scrollHeight")+"px"),setTimeout(function(){a.next(".ovabrw-wcst-fields").css("overflow","visible")},90))}),O(".ovabrw-wcst-global select.ovabrw_select2").select2({allowClear:!0}),O('.ovabrw-wcst-global select[name="ovabrw_glb_primary_font"]').on("change",function(){var e=O(this);e.closest(".ovabrw-wcst-global").find('select[name="ovabrw_glb_primary_font_weight[]"]').empty();var t,a=e.find("option:selected").data("variants");a&&O.isArray(a)&&(t="",O.each(a,function(e,a){t+='<option value="'+a+'">'+a+"</option>"}),t&&e.closest(".ovabrw-wcst-global").find('select[name="ovabrw_glb_primary_font_weight[]"]').append(t))}),O(".ovabrw-wcst-global .ovabrw_glb_select_all_font_weight").on("click",function(e){e.preventDefault(),O(this).closest(".ovabrw-wcst-global").find('select[name="ovabrw_glb_primary_font_weight[]"]').select2("destroy").find("option").prop("selected","selected").end().select2({allowClear:!0});e=O(this).closest(".ovabrw-wcst-fields");e.css("max-height",e.prop("scrollHeight")+"px")}),O(".ovabrw-wcst-global .ovabrw-wcst-card .ovabrw-wcst-tab-btn").on("click",function(e){e.preventDefault();e=O(this).data("id");O(this).hasClass("active")||(O(this).closest(".ovabrw-wcst-tab-nav").find(".ovabrw-wcst-tab-btn").removeClass("active"),O(this).addClass("active"),O(this).closest(".ovabrw-wcst-tabs").find(".ovabrw-wcst-tab-content .form-table").removeClass("active"),O(this).closest(".ovabrw-wcst-tabs").find('.ovabrw-wcst-tab-content .form-table[data-id="'+e+'"]').addClass("active"))})}};function t(e){if("loaded"==e){if("undefined"!=typeof cus_tax_hide_p_loaded)for(var a=cus_tax_hide_p_loaded.split(","),t=0;t<a.length;t++)O("#"+a[t]+"div").length&&O("#"+a[t]+"div").hide()}else if("changed"==e&&"undefined"!=typeof all_cus_tax)for(a=all_cus_tax.split(","),t=0;t<a.length;t++)O("#"+a[t]+"div").length&&O("#"+a[t]+"div").hide()}O(document).ready(function(){C.init()})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,